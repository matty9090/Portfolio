{
    "name": "Procedural Universe",
    "subtitle": "Masters Project - In progress",
    "tags": ["DirectX", "C++", "CMake"],
    "demo": "https://www.youtube.com/watch?v=Zf8qHWhzWqM",
    "play": "",
    "src": "https://github.com/matty9090/NBody-Simulator",
    "priority": 0,
    "desc": [
        "For my masters project I decided I would make an <a href=\"https://en.wikipedia.org/wiki/N-body_simulation\" target=\"_blank\">N-Body simulator</a>. However, I wanted to apply this to a game scenario, so I thought it would be an interesting visual demonstration if I could turn the particle simulation into a galaxy which can be explored.",
        "So far, the N-Body simulator supports a raw CPU brute force simulation <span class=\"inline-code\">O(n&sup2;)</span>, GPU brute force and a <a href=\"https://en.wikipedia.org/wiki/Barnes%E2%80%93Hut_simulation\" target=\"_blank\">Barnes-Hut simulation</a> <span class=\"inline-code\">O(n log n)</span>. The procedural universe can currently render a galaxy where flying up to any star will allow you to explore the star system. Furthermore, you can explore the planets up close. The planet renderer is a stripped down version of my procedural planet generation.",
        "The goal is to allow intergalactic exploration and explore different graphics optimisation techniques. Currently the skybox is baked in realtime when you transition into a star system and planet. The arms of galaxies are rendered using many camera facing sprites which fade out on approach, this produces a volumetric effect."
    ]
}